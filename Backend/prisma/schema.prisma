// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


enum Tipo_Ident {
  AS
  CC
  CE
  MV
  RC
  TI
}

enum Sex {
 Femenino
 Masculino
 Indetermidado
}


enum Tipo_Usuario {
 Contributivo
 Subsidiado
 Vinculado
 Particular
 Otro
}


model Usuario{
id_usuario Int @id @default(autoincrement())
tipo_identificacion Tipo_Ident
identificacion String @db.VarChar(20)
primer_nombre String @db.VarChar(50)
segundo_nombre String? @db.VarChar(50)
primer_apellido String @db.VarChar(50)
segundo_apellido String? @db.VarChar(50)
fecha_nacimiento DateTime @db.Date
sexo Sex
email String @unique
telefono String?
direccion String? @db.VarChar(50)
tipo_usuario Tipo_Usuario
municipio Int
estado Estado
createAt DateTime @default(now())
updateAt DateTime @default(now())
procedimiento Procedimiento[]
eps Int
Municipio_Usuario Municipio @relation(fields: [municipio], references: [id_municipio])
Eps_usuario Eps @relation(fields: [eps],references: [id_eps])
@@map("usuarios")

}



enum Estado {
 Activo
 Inactivo
}
model Eps{
id_eps Int @id @default(autoincrement())
codigo String @db.VarChar(20)
nombre String @db.VarChar(50)
estado Estado
usuario Usuario[]
@@map("eps")
}

model Tipo_Procedimiento{
id_tipo_procedimiento Int @id @default(autoincrement())
nombre String @db.VarChar(50)
procedimiento Procedimiento[]
@@map("Tito_procedimiento")
}




model Procedimiento{
id_procedimiento Int @id @default(autoincrement())
consecutivo Int
fecha DateTime 
edad_persona String @db.VarChar(20)
resultado Resultado[]

Procedimeinto_Contrato Contrato @relation(fields: [contrato], references: [id_contrato])
contrato Int


Tipo_Procedimiento_Procedimiento Tipo_Procedimiento @relation(fields: [tipo_procedimiento], references: [id_tipo_procedimiento])
tipo_procedimiento Int

Procedimiento_Usuario Usuario @relation(fields: [usuario], references: [id_usuario])
usuario Int
@@map("procedimientos")
}






model Resultado{
id_resultado Int @id @default(autoincrement())
cantidad Int
fecha_muestra DateTime
resultado String @db.VarChar(30)
observacion String @db.VarChar(200)
profesional Int

precio Decimal @db.Decimal(10,2)

Tarifa_Resultado Tarifa @relation(fields: [tarifa],references: [id_tarifa])
tarifa Int

Resultado_Procedimiento Procedimiento @relation(fields: [procedimiento], references: [id_procedimiento])
procedimiento Int


@@map("resultados")
}



model Departamento{
id_departamento Int @id @default(autoincrement())
nombre String @db.VarChar(50)
municipio Municipio[]
@@map("departamentos")
}


model Municipio{
id_municipio Int @id @default(autoincrement())
nombre String @db.VarChar(50)
departamento Int
suario Usuario[]
empresa Empresa[]
Departamentos_Municipio Departamento @relation(fields: [departamento], references: [id_departamento])
@@map("Municipios")
}

// es la misma tabla de protocolo
model Tipo_Servicio{
id_tipo_servicio Int @id @default(autoincrement())
nombre String @db.VarChar(50)
estado Estado
servicio Servicio[]
@@map("tipos_servicios")
}

model Servicio{
id_servicio Int @id @default(autoincrement())
nombre String @db.VarChar(50)
precio Decimal @db.Decimal(10,2)
iva Decimal @db.Decimal(10,2)
nivel Int



tarifa Tarifa[]

Servicio_Tipo_Servicio Tipo_Servicio @relation(fields: [tipo_servicio],references: [id_tipo_servicio])
tipo_servicio Int

Prestador_Servicio Prestador @relation(fields: [prestador],references: [id_prestador])
prestador Int
@@map("Servicios")
}



model Examen{
id_examen Int @id @default(autoincrement())
nombre String @db.VarChar(50)

precio Decimal @db.Decimal(10,2)
estado Estado


tipo_resultado Tipo_Resultado[]
tarifa Tarifa[]

examen_tipo_examen Tipo_Examen @relation(fields: [tipo_examen],references: [id_tipo_examen])
tipo_examen Int

@@map("examenes")
}



model Tipo_Resultado{
id_tipo_resultado Int @id @default(autoincrement())
nombre String @db.VarChar(50)
unidades  String @db.VarChar(30)
rango_biologico  String @db.VarChar(20)
metodo  String @db.VarChar(30)
estado Estado
Tipo_Resultado_examen Examen @relation(fields: [examen],references: [id_examen])
examen Int
@@map("tipos_resultados")
}


model Tipo_Examen{
id_tipo_examen Int @id @default(autoincrement())
nombre String @db.VarChar(50)
estado Estado
 examen Examen[]
@@map("tipos_Examenes")
}




model Prestador{
id_prestador Int @id @default(autoincrement())
codigo BigInt
razon_social String @db.VarChar(50)
consecutivo Int
servicio Servicio[]
profesional Profesional[]
@@map("Prestadores")
}


enum Rol {
 Administrador
Facturacion
Bacteriologo
}


model Profesional{
id_profesional Int @id @default(autoincrement())
identificacion BigInt
nombre String @db.VarChar(30)
cargo String @db.VarChar(50)
rol Rol
password String @db.VarChar(20)

Propefisonal_Presatador Prestador @relation(fields: [prestador],references: [id_prestador])
prestador Int
@@map("profesionales")
}








enum Tipo_Empresa{
  Particular
  Empresa
  Eps
  Esess
}


model Empresa{
id_empresa Int @id @default(autoincrement())
nit String @db.VarChar(530)
codigo Int
nombre String @db.VarChar(50)
sigla String @db.VarChar(50)
tipo Tipo_Empresa
estado Estado
municipio Int
contrato Contrato[]
Muncipio_Empresa Municipio @relation(fields: [municipio],references: [id_municipio])
@@map("Empresas")
}


model Contrato{
id_contrato Int @id @default(autoincrement())
fecha_inicio DateTime @db.Date
fecha_fin DateTime @db.Date
estado Estado
empresa Int
tarifa Tarifa[]
procedimiento  Procedimiento[]


Contrato_Empresa Empresa @relation(fields: [empresa],references: [id_empresa])
@@map("Contratos")
}


model Tarifa{
id_tarifa Int @id @default(autoincrement())
estado Estado
precio Decimal @db.Decimal(10,2)
resultado Resultado[]


Tarifa_Examen Examen @relation(fields: [examen],references: [id_examen])
examen Int

Tarifa_Contrato Contrato @relation(fields: [contrato],references: [id_contrato])
contrato Int

Tarifa_Servicio Servicio @relation(fields: [servicio],references: [id_servicio])
servicio Int
@@map("Tarifas")
}
